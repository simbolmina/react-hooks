{"version":3,"sources":["context/auth-context.js","components/UI/LoadingIndicator.js","components/UI/Card.js","components/Ingredients/IngredientForm.js","components/Ingredients/IngredientList.js","components/hooks/http.js","components/UI/ErrorModal.js","components/Ingredients/Search.js","components/Ingredients/Ingredients.js","components/Auth.js","App.js","index.js"],"names":["AuthContext","React","createContext","isAuth","login","AuthContextProvider","props","_useState","useState","_useState2","Object","slicedToArray","isAuthanticated","setIsAuthenticated","react_default","a","createElement","Provider","value","children","LoadingIndicator","className","Card","IngredientForm","memo","enteredTitle","setEnteredTitle","_useState3","_useState4","enteredAmount","setEnteredAmount","components_UI_Card","onSubmit","event","preventDefault","onAddIngredient","title","amount","htmlFor","type","id","onChange","target","loading","components_UI_LoadingIndicator","IngredientList","ingredients","map","ig","key","onClick","onRemoveItem","bind","initialState","error","data","extra","identifier","httpReducer","currHttpState","action","objectSpread2","responseData","errorMessage","Error","useHttp","_useReducer","useReducer","_useReducer2","httpState","dispatchHttp","clear","useCallback","sendRequest","url","method","body","reqExtra","reqIdentifier","fetch","header","Content-Type","then","response","json","catch","message","isLoading","ErrorModal","Fragment","onClose","Search","onLoadIngredients","enteredFilter","setEnteredFilter","inputRef","useRef","_useHttp","useEffect","timer","setTimeout","current","query","length","concat","clearTimeout","loadedIngredients","push","UI_ErrorModal","ref","ingredientReducer","curentingredient","toConsumableArray","ingredient","filter","ing","Ingredients","userIngredients","dispatch","name","addIngredientHandler","JSON","stringify","removeIngredientHandler","ingredientId","filteredIngredientsHandler","filteredIngredients","ingredientList","useMemo","Ingredients_IngredientList","Ingredients_IngredientForm","Ingredients_Search","Auth","authContext","useContext","App","Ingredients_Ingredients","src_components_Auth","ReactDOM","render","auth_context","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e76b8457.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport const AuthContext = React.createContext({\r\n  isAuth: false,\r\n  login: () => {},\r\n});\r\n\r\nconst AuthContextProvider = function (props) {\r\n  const [isAuthanticated, setIsAuthenticated] = useState(false);\r\n\r\n  const loginHandler = function () {\r\n    setIsAuthenticated(true);\r\n  };\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ login: loginHandler, isAuth: isAuthanticated }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n","import React from 'react';\n\nimport './LoadingIndicator.css';\n\nconst LoadingIndicator = () => (\n  <div className=\"lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default LoadingIndicator;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import React, { useState } from 'react';\nimport LoadingIncidator from '../UI/LoadingIndicator';\nimport Card from '../UI/Card';\nimport './IngredientForm.css';\n\nconst IngredientForm = React.memo(props => {\n  // const [inputState, setInputState] = useState({ title: '', amount: '' });\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onAddIngredient({ title: enteredTitle, amount: enteredAmount });\n  };\n\n  const titleHandler = function (event) {\n    setEnteredTitle(event.target.value);\n  };\n  const amountHandler = function (event) {\n    setEnteredAmount(event.target.value);\n  };\n\n  return (\n    <section className=\"ingredient-form\">\n      <Card>\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"title\">Name</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={enteredTitle}\n              onChange={titleHandler}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">Amount</label>\n            <input\n              type=\"number\"\n              id=\"amount\"\n              value={enteredAmount}\n              onChange={amountHandler}\n            />\n          </div>\n          <div className=\"ingredient-form__actions\">\n            <button type=\"submit\">Add Ingredient</button>\n            {props.loading && <LoadingIncidator />}\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default IngredientForm;\n","import React from 'react';\n\nimport './IngredientList.css';\n\nconst IngredientList = React.memo(props => {\n  return (\n    <section className=\"ingredient-list\">\n      <h2>Uploaded Ingredients</h2>\n      <ul>\n        {props.ingredients.map(ig => (\n          <li key={ig.id} onClick={props.onRemoveItem.bind(this, ig.id)}>\n            <span>{ig.title}</span>\n            <span>{ig.amount}x</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n});\n\nexport default IngredientList;\n","import { useReducer, useCallback } from 'react';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  data: null,\r\n  extra: null,\r\n  identifier: null,\r\n};\r\n\r\nconst httpReducer = function (currHttpState, action) {\r\n  switch (action.type) {\r\n    case 'SEND':\r\n      return {\r\n        loading: true,\r\n        error: null,\r\n        data: null,\r\n        extra: null,\r\n        identifier: action.identifier,\r\n      };\r\n    case 'RESPONSE':\r\n      return {\r\n        ...currHttpState,\r\n        loading: false,\r\n        data: action.responseData,\r\n        extra: action.extra,\r\n      };\r\n    case 'ERROR':\r\n      return { loading: false, error: action.errorMessage };\r\n    case 'CLEAR':\r\n      return initialState;\r\n    default:\r\n      throw new Error('http reducer error');\r\n  }\r\n};\r\n\r\nconst useHttp = function () {\r\n  const [httpState, dispatchHttp] = useReducer(httpReducer, initialState);\r\n\r\n  const clear = useCallback(function () {\r\n    dispatchHttp({ type: 'CLEAR' });\r\n  }, []);\r\n\r\n  const sendRequest = useCallback(function (\r\n    url,\r\n    method,\r\n    body,\r\n    reqExtra,\r\n    reqIdentifier\r\n  ) {\r\n    dispatchHttp({ type: 'SEND', identifier: reqIdentifier });\r\n    fetch(url, {\r\n      method: method,\r\n      body: body,\r\n      header: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(responseData => {\r\n        dispatchHttp({\r\n          type: 'RESPONSE',\r\n          responseData: responseData,\r\n          extra: reqExtra,\r\n        });\r\n      })\r\n      .catch(error => {\r\n        // setError(error.message + 'Something went wrong');\r\n        // setIsLoading(false);\r\n        dispatchHttp({ type: 'ERROR', errorMessage: 'hata ' + error.message });\r\n      });\r\n  },\r\n  []);\r\n  return {\r\n    isLoading: httpState.loading,\r\n    data: httpState.data,\r\n    error: httpState.error,\r\n    sendRequest: sendRequest,\r\n    reqExtra: httpState.extra,\r\n    reqIdentifier: httpState.identifier,\r\n    clear: clear,\r\n  };\r\n};\r\n\r\nexport default useHttp;\r\n","import React from 'react';\n\nimport './ErrorModal.css';\n\nconst ErrorModal = React.memo(props => {\n  return (\n    <React.Fragment>\n      <div className=\"backdrop\" onClick={props.onClose} />\n      <div className=\"error-modal\">\n        <h2>An Error Occurred!</h2>\n        <p>{props.children}</p>\n        <div className=\"error-modal__actions\">\n          <button type=\"button\" onClick={props.onClose}>\n            Okay\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n});\n\nexport default ErrorModal;\n","import React, { useState, useEffect, useRef } from 'react';\nimport useHttp from '../hooks/http';\nimport ErrorModal from '../UI/ErrorModal';\nimport Card from '../UI/Card';\nimport './Search.css';\n\nconst Search = React.memo(props => {\n  const { onLoadIngredients } = props;\n  const [enteredFilter, setEnteredFilter] = useState('');\n  const inputRef = useRef();\n  const { isLoading, data, error, sendRequest, clear } = useHttp();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (enteredFilter === inputRef.current.value) {\n        const query =\n          enteredFilter.length === 0\n            ? ''\n            : `?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`;\n        sendRequest(\n          'https://react-recap-2a495-default-rtdb.firebaseio.com/ingredients.json' +\n            query,\n          'GET'\n        );\n        // fetch(\n        //   'https://react-recap-2a495-default-rtdb.firebaseio.com/ingredients.json' +\n        //     query\n        // )\n        //   .then(response => {\n        //     return response.json();\n        //   })\n        // .then(data => {\n        //   console.log(data);\n        //   // const loadedIngredients = [];\n\n        //   // for (const key in data) {\n        //   //   loadedIngredients.push({\n        //   //     id: key,\n        //   //     title: data[key].title,\n        //   //     amount: data[key].amount,\n        //   //   });\n        //   // }\n        //   // onLoadIngredients(loadedIngredients);\n        // });\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer); //we clear timer for performance reasons\n    };\n  }, [enteredFilter, inputRef, sendRequest]);\n\n  useEffect(() => {\n    if (!isLoading && !error && data) {\n      const loadedIngredients = [];\n\n      for (const key in data) {\n        loadedIngredients.push({\n          id: key,\n          title: data[key].title,\n          amount: data[key].amount,\n        });\n      }\n      onLoadIngredients(loadedIngredients);\n    }\n  }, [data, isLoading, error, onLoadIngredients]);\n\n  return (\n    <section className=\"search\">\n      {error && <ErrorModal onClose={clear}>{error}</ErrorModal>}\n      <Card>\n        <div className=\"search-input\">\n          <label>Filter by Title</label>\n          {isLoading && <span>Loading...</span>}\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={enteredFilter}\n            onChange={event => setEnteredFilter(event.target.value)}\n          />\n        </div>\n      </Card>\n    </section>\n  );\n});\n\nexport default Search;\n","import React, { useCallback, useEffect, useMemo, useReducer } from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport Search from './Search';\nimport ErrorModal from '../UI/ErrorModal';\nimport useHttp from '../hooks/http';\n\nconst ingredientReducer = function (curentingredient, action) {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n    case 'ADD':\n      return [...curentingredient, action.ingredient];\n    case 'DELETE':\n      return curentingredient.filter(ing => ing.id !== action.id);\n    default:\n      throw new Error('Should not get there');\n  }\n};\n\n// const httpReducer = function (currHttpState, action) {\n//   switch (action.type) {\n//     case 'SEND':\n//       return { loading: true, error: null };\n//     case 'RESPONSE':\n//       return { ...currHttpState, loading: false };\n//     case 'ERROR':\n//       return { loading: false, error: action.errorMessage };\n//     case 'CLEAR':\n//       return { ...currHttpState, error: null };\n//     default:\n//       throw new Error('http reducer error');\n//   }\n// };\n\nfunction Ingredients() {\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []);\n  const {\n    isLoading,\n    error,\n    data,\n    sendRequest,\n    reqExtra,\n    reqIdentifier,\n    clear,\n  } = useHttp();\n  //useHttp recap 444-446 dersleri arasinda anlatildi. karisik konu\n\n  // const [httpState, dispatchHttp] = useReducer(httpReducer, {\n  //   loading: false,\n  //   error: null,\n  // });\n  // const [userIngredients, setUserIngredients] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState();\n\n  // removed this because search component fetches data already\n\n  // useEffect(() => {\n  //   fetch(\n  //     'https://react-recap-2a495-default-rtdb.firebaseio.com/ingredients.json'\n  //   )\n  //     .then(response => {\n  //       return response.json();\n  //     })\n  //     .then(data => {\n  //       console.log(data);\n  //       const loadedIngredients = [];\n\n  //       for (const key in data) {\n  //         loadedIngredients.push({\n  //           id: key,\n  //           title: data[key].title,\n  //           amount: data[key].amount,\n  //         });\n  //       }\n  //       setUserIngredients(loadedIngredients);\n  //     });\n  // }, []);\n\n  useEffect(() => {\n    if (!isLoading && !error && reqIdentifier === 'REMOVE_INGREDIENT') {\n      dispatch({ type: 'DELETE', id: reqExtra });\n    } else if (!isLoading && !error && reqIdentifier === 'ADD_INGREDIENT') {\n      dispatch({ type: 'ADD', ingredient: { id: data.name, ...reqExtra } });\n    }\n  }, [data, reqExtra, reqIdentifier]);\n\n  const addIngredientHandler = useCallback(\n    ingredient => {\n      sendRequest(\n        'https://react-recap-2a495-default-rtdb.firebaseio.com/ingredients.json',\n        'POST',\n        JSON.stringify(ingredient),\n        ingredient,\n        'ADD_INGREDIENT'\n      );\n      // setIsLoading(true);\n      // dispatchHttp({ type: 'SEND' });\n      // fetch(\n      //   'https://react-recap-2a495-default-rtdb.firebaseio.com/ingredients.json',\n      //   {\n      //     method: 'POST',\n      //     body: JSON.stringify(ingredient),\n      //     headers: {\n      //       'Content-Type': 'application/json',\n      //     },\n      //   }\n      // )\n      //   .then(response => {\n      //     dispatchHttp({ type: 'RESPONSE' });\n      //     // setIsLoading(false);\n      //     return response.json();\n      //   })\n      //   .then(data => {\n      //     // setUserIngredients(prevIngredients => [\n      //     //   ...prevIngredients,\n      //     //   { id: data.name, ...ingredient },\n      //     // ]);\n      //     dispatch({ type: 'ADD', ingredient: { id: data.name, ...ingredient } });\n      //   });\n    },\n    [sendRequest]\n  );\n\n  const removeIngredientHandler = useCallback(\n    ingredientId => {\n      sendRequest(\n        `https://react-recap-2a495-default-rtdb.firebaseio.com/ingredients/${ingredientId}.json`,\n        'DELETE',\n        null,\n        ingredientId,\n        'REMOVE_INGREDIENT'\n      );\n      // setIsLoading(true);\n      // dispatchHttp({ type: 'SEND' });\n      // fetch(\n      //   `https://react-recap-2a495-default-rtdb.firebaseio.com/ingredients/${ingredientId}.json`,\n      //   { method: 'DELETE' }\n      // )\n      //   .then(response => {\n      //     // setIsLoading(false);\n\n      //     dispatchHttp({ type: 'RESPONSE' });\n      //     // setUserIngredients(prevIngredients =>\n      //     //   prevIngredients.filter(ingredient => ingredient.id !== ingredientId)\n      //     // );\n      //     dispatch({ type: 'DELETE', id: ingredientId });\n      //   })\n      //   .catch(error => {\n      //     // setError(error.message + 'Something went wrong');\n      //     // setIsLoading(false);\n      //     dispatchHttp({ type: 'ERROR', errorMessage: 'hata ' + error.message });\n      //   });\n    },\n    [sendRequest]\n  );\n\n  const filteredIngredientsHandler = useCallback(function (\n    filteredIngredients\n  ) {\n    // setUserIngredients(filteredIngredients);\n    dispatch({ type: 'SET', ingredients: filteredIngredients });\n  },\n  []);\n\n  const clearError = useCallback(function () {\n    // setError(null);\n    // dispatchHttp({ type: 'CLEAR' });\n    clear();\n  }, []);\n\n  const ingredientList = useMemo(() => {\n    //memorize values and only renders when values changes\n    return (\n      <IngredientList\n        ingredients={userIngredients}\n        onRemoveItem={removeIngredientHandler}\n      />\n    );\n  }, [userIngredients, removeIngredientHandler]);\n  return (\n    <div className=\"App\">\n      {error && <ErrorModal onClose={clear}>{error}</ErrorModal>}\n      <IngredientForm\n        onAddIngredient={addIngredientHandler}\n        loading={isLoading}\n      />\n\n      <section>\n        <Search onLoadIngredients={filteredIngredientsHandler} />\n        {ingredientList}\n      </section>\n    </div>\n  );\n}\n\nexport default Ingredients;\n","import React, { useContext } from 'react';\n\nimport Card from './UI/Card';\nimport './Auth.css';\nimport { AuthContext } from '../context/auth-context';\n\nconst Auth = props => {\n  const authContext = useContext(AuthContext);\n\n  const loginHandler = () => {\n    authContext.login();\n  };\n\n  return (\n    <div className=\"auth\">\n      <Card>\n        <h2>You are not authenticated!</h2>\n        <p>Please log in to continue.</p>\n        <button onClick={loginHandler}>Log In</button>\n      </Card>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useContext } from 'react';\n\nimport Ingredients from './components/Ingredients/Ingredients';\nimport Auth from './components/Auth';\nimport { AuthContext } from './context/auth-context';\n\nconst App = props => {\n  const authContext = useContext(AuthContext);\n\n  let content;\n\n  if (authContext.isAuth) {\n    content = <Ingredients />;\n  } else {\n    content = <Auth />;\n  }\n  return content;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AuthContextProvider from './context/auth-context';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <AuthContextProvider>\n    <App />\n  </AuthContextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}